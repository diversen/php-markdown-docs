#!/usr/bin/env php
<?php

if (file_exists('vendor/autoload.php')) {
    include_once "vendor/autoload.php";
}

if (file_exists('../vendor/autoload.php')) {
    include_once "../vendor/autoload.php";
}

//include_once "../markdownDocs.php";


use diversen\cli;
use diversen\markdownDocs;
use diversen\cli\common;

class markdownDocsCli extends cli {
    
    /**
     * Init - the commandline parser
     * Init - load functions and classes.
     * Init - Add major options, like -v
     */
    
    public static function init() {
        
        // Init parent with base commands
        parent::init();
        
        self::$parser->description = <<<EOF
                
                        /\_/\
                   ____/ o o \
                 /~____  =Ã¸= /
                (______)__m_m)
                
    php-markdown-docs. Generate documentation from PHP source files

EOF;
        self::$parser->version = '0.0.1';        
        self::beforeParse();
    }
    
    /**
     * Run the parser
     *                              
     * @return int $ret 0 on success any other int is failure
     */
    public static function run() {
        
        $result = self::parse();
        
        // Execute the result
        $ret = self::execute($result);
        
        // Exit with result from execution
        exit($ret);
    }

    /**
     * Before parsing of the commandline options
     * This loads all commandline options from file system
     * and modules found in the database
     */
    public static function beforeParse() {

        self::setCommand('generate', array(
            'description' => 'Generates markdown documentation from PHP source files',
        ));
        
        self::setOption('generate_public_only', array(
            'long_name' => '--public',
            'description' => 'Only create markdown for public methods',
            'action' => 'StoreTrue',
        ));

        self::setOption('generate_docs', array(
            'long_name' => '--run',
            'description' => 'Generate markdown',
            'action' => 'StoreTrue',
        ));

        self::setArgument(
                'classes', array('description' => 'Specify classes to generate documentation from. They need to be autoloadable',
                'optional' => true,
                'multiple' => true
        ));
    }
}

function generate_public_only () {
    \diversen\conf::setMainIni('public_only', 1);
}


function generate_docs($options) {

    $options['public_only'] = \diversen\conf::getMainIni('public_only');
    
    $md = new markdownDocs();
    if (empty($options['classes'])) {
        common::abort('Specify classes to generate documentation from');
    }

    $str = '';
    foreach ($options['classes'] as $class) {
        $md->classToMD($class, $options);
        $str.= $md->getOutput();
    }
    echo $str;
    
}

markdownDocsCli::init();
markdownDocsCli::run();
